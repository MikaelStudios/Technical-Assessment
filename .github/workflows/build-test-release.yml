name: Build, Test, APK & Release

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*'  # only tags starting with v (e.g. v1.0, v2.1)

jobs:
  # Job 1: Run Unity unit tests (e.g. edit mode tests)
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Optionally cache your Library folder to speed up tests
      - name: Cache Library folder
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ github.sha }}

      - name: Run Unity Edit Mode Tests
        uses: game-ci/unity-test-runner@v4
        id: tests
        with:
          projectPath: .
          testMode: editmode
          artifactsPath: test-results
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-results

  # Job 2: Build the Android APK
  build:
    name: Build APK
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache Library folder
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ github.sha }}

      - name: Build Android APK
        uses: game-ci/unity-builder@v4
        with:
          targetPlatform: Android
          # Ensure that an APK (not an App Bundle) is generated:
          androidAppBundle: false
          buildPath: build/app.apk
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-apk
          path: build/app.apk

  # Job 3: Create a GitHub release with the APK attached
  release:
    name: Create Release with APK
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download APK Artifact
        uses: actions/download-artifact@v3
        with:
          name: app-apk
          path: build/

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: "Automated release generated by GitHub Actions."
          draft: false
          prerelease: false

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/app.apk
          asset_name: app.apk
          asset_content_type: application/vnd.android.package-archive
